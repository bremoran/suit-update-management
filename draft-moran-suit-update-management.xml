<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.5.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-moran-suit-update-management-00" category="std">

  <front>
    <title abbrev="SUIT Update Management Extensions">Update Management Extensions for Software Updates for Internet of Things (SUIT) Manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>Brendan.Moran@arm.com</email>
      </address>
    </author>

    <date year="2021" month="October" day="25"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification describes extensions to the SUIT manifest format
defined in <xref target="I-D.ietf-suit-manifest"/>. These extensions allow an update
author, update distributor or device operator to more precisely control
the distribution and installation of updates to IoT devices. These
extensions also provide a mechanism to inform a management system of
Software Identifier and Software Bill Of Materials information about an
updated device.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Full management of software updates for unattended, connected devices, such as Internet of Things devices requires a cooperation between the update author(s) and management, distribution, policy enforcement, and auditing systems. This specification provides the extensions to the SUIT manifest (<xref target="I-D.ietf-suit-manifest"/>) that enable an author to coordinate with these other systems. These extensions enable authors to instruct devices to examine update priority, local update authorisation, update lifetime, and system properties. They also enable devices to report and distributors to collect Software Bill of Materials information.</t>

<t>Extensions in this specification are OPTIONAL to implment and OPTIONAL to include in manifests unless otherwise designated.</t>

</section>
<section anchor="conventions-and-terminology" title="Conventions and Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>Additionally, the following terminology is used throughout this document:</t>

<t><list style="symbols">
  <t>SUIT: Software Update for the Internet of Things, also the IETF working group for this standard.</t>
</list></t>

</section>
<section anchor="extension-metadata" title="Extension Metadata">

<t>Some additional metadata makes management of SUIT updates easier: a CoSWID can enable a</t>

<section anchor="manifest-digest-coswid" title="suit-coswid">

<t>suit-coswid is a member of the suit-manifest. It contains a Concise Software Identifier (CoSWID) as defined in <xref target="I-D.ietf-sacm-coswid"/>. This element SHOULD be made severable so that it can be discarded by the Recipient or an intermediary if it is not required by the Recipient.</t>

<t>suit-coswid typically requires no processing by the Recipient. However all Recipients MUST NOT fail if a suit-coswid is present.</t>

<t>suit-coswid is RECOMMENDED to implement and RECOMMENDED to include in manifests.</t>

<t>TODO: CoRIM might be a preferable alternative to CoSWID.
TODO: Should CoMID be offered as an alternative to Vendor ID/Class ID?
TODO: Should there be a CoMID namespace identifier for UUIDs?</t>

</section>
<section anchor="text-version-required" title="text-version-required">

<t>suit-text-version-required is used to represent a version-based dependency on suit-parameter-version as described in <xref target="suit-parameter-version"/> and <xref target="suit-condition-version"/>. To describe a version dependency, a Manifest Author SHOULD populate the suit-text map with a SUIT_Component_Identifier key for the dependency component, and place in the corresponding map a suit-text-version-required key with a free text expression that is representative of the version constraints placed on the dependency. This text SHOULD be expressive enough that a device operator can be expected to understand the dependency. This is a free text field and there are no specific formatting rules.</t>

<t>By way of example only, to express a dependency on a component “[‘x’, ‘y’]”, where the version should be any v1.x later than v1.2.5, but not v2.0 or above, the author would add the following structure to the suit-text element. Note that this text is in cbor-diag notation.</t>

<figure><artwork><![CDATA[
[h'78',h'79'] : {
    7 : ">=1.2.5,<2"
}
]]></artwork></figure>

</section>
</section>
<section anchor="extension-parameters" title="Extension Parameters">

<t>Several parameters are needed to define the behaviour of the commands specified in <xref target="extension-commands"/>. These parameters follow the same considerations as defined in SUIT_Parameters, Section 8.4.8 of <xref target="I-D.ietf-suit-manifest"/></t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>CDDL Structure</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>Use Before</c>
      <c>suit-parameter-use-before</c>
      <c><xref target="suit-parameter-use-before"/></c>
      <c>Minimum Battery</c>
      <c>suit-parameter-minimum-battery</c>
      <c><xref target="suit-parameter-minimum-battery"/></c>
      <c>Update Priority</c>
      <c>suit-parameter-update-priority</c>
      <c><xref target="suit-parameter-update-priority"/></c>
      <c>Version</c>
      <c>suit-parameter-version</c>
      <c><xref target="suit-parameter-version"/></c>
      <c>Wait Info</c>
      <c>suit-parameter-wait-info</c>
      <c><xref target="suit-parameter-wait-info"/></c>
</texttable>

<section anchor="suit-parameter-use-before" title="suit-parameter-use-before">

<t>An expiry date for the use of the manifest encoded as the positive integer number of seconds since 1970-01-01. Implementations that use this parameter MUST use a 64-bit internal representation of the integer. Used with <xref target="suit-condition-use-before"/></t>

</section>
<section anchor="suit-parameter-minimum-battery" title="suit-parameter-minimum-battery">

<t>This parameter sets the minimum battery level in mWh. This parameter is encoded as a positive integer. Used with suit-condition-minimum-battery (<xref target="suit-condition-minimum-battery"/>).</t>

</section>
<section anchor="suit-parameter-update-priority" title="suit-parameter-update-priority">

<t>This parameter sets the priority of the update. This parameter is encoded as an integer. It is used along with suit-condition-update-authorized (<xref target="suit-condition-update-authorized"/>) to ask an application for permission to initiate an update. This does not constitute a privilege inversion because an explicit request for authorization has been provided by the Update Authority in the form of the suit-condition-update-authorized command.</t>

<t>Applications MAY define their own meanings for the update priority. For example, critical reliability &amp; vulnerability fixes MAY be given negative numbers, while bug fixes MAY be given small positive numbers, and feature additions MAY be given larger positive numbers, which allows an application to make an informed decision about whether and when to allow an update to proceed.</t>

</section>
<section anchor="suit-parameter-version" title="suit-parameter-version">

<t>Indicates allowable versions for the specified component. Allowable versions can be specified, either with a list or with range matching. This parameter is compared with version asserted by the current component when suit-condition-version (<xref target="suit-condition-version"/>) is invoked. The current component may assert the current version in many ways, including storage in a parameter storage database, in a metadata object, or in a known location within the component itself.</t>

<t>The component version can be compared as:</t>

<t><list style="symbols">
  <t>Greater.</t>
  <t>Greater or Equal.</t>
  <t>Equal.</t>
  <t>Lesser or Equal.</t>
  <t>Lesser.</t>
</list></t>

<t>Versions are encoded as a CBOR list of integers. Comparisons are done on each integer in sequence. Comparison stops after all integers in the list defined by the manifest have been consumed OR after a non-equal match has occurred. For example, if the manifest defines a comparison, “Equal [1]”, then this will match all version sequences starting with 1. If a manifest defines both “Greater or Equal [1,0]” and “Lesser [1,10]”, then it will match versions 1.0.x up to, but not including 1.10.</t>

<t>While the exact encoding of versions is application-defined, semantic versions map conveniently. For example,</t>

<t><list style="symbols">
  <t>1.2.3 = [1,2,3].</t>
  <t>1.2-rc3 = [1,2,-1,3].</t>
  <t>1.2-beta = [1,2,-2].</t>
  <t>1.2-alpha = [1,2,-3].</t>
  <t>1.2-alpha4 = [1,2,-3,4].</t>
</list></t>

<t>suit-condition-version is OPTIONAL to implement.</t>

<t>Versions SHOULD be provided as follows:</t>

<t><list style="numbers">
  <t>The first integer represents the major number. This indicates breaking changes to the component.</t>
  <t>The second integer represents the minor number. This is typically reserved for new features or large, non-breaking changes.</t>
  <t>The third integer is the patch version. This is typically reserved for bug fixes.</t>
  <t>The fourth integer is the build number.</t>
</list></t>

<t>Where Alpha (-3), Beta (-2), and Release Candidate (-1) are used, they are inserted as a negative number between Minor and Patch numbers. This allows these releases to compare correctly with final releases. For example, Version 2.0, RC1 should be lower than Version 2.0.0 and higher than any Version 1.x. By encoding RC as -1, this works correctly: [2,0,-1,1] compares as lower than [2,0,0]. Similarly, beta (-2) is lower than RC and alpha (-3) is lower than RC.</t>

</section>
<section anchor="suit-parameter-wait-info" title="suit-parameter-wait-info">

<t>suit-directive-wait (<xref target="suit-directive-wait"/>) directs the manifest processor to pause until a specified event occurs. The suit-parameter-wait-info encodes the parameters needed for the directive.</t>

<t>The exact implementation of the pause is implementation-defined. For example, this could be done by blocking on a semaphore, registering an event handler and suspending the manifest processor, polling for a notification, or aborting the update entirely, then restarting when a notification is received.</t>

<t>suit-parameter-wait-info is encoded as a map of wait events. When ALL wait events are satisfied, the Manifest Processor continues. The wait events currently defined are described in the following table.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Encoding</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>suit-wait-event-authorization</c>
      <c>int</c>
      <c>Same as suit-parameter-update-priority</c>
      <c>suit-wait-event-power</c>
      <c>int</c>
      <c>Wait until power state</c>
      <c>suit-wait-event-network</c>
      <c>int</c>
      <c>Wait until network state</c>
      <c>suit-wait-event-other-device-version</c>
      <c>See below</c>
      <c>Wait for other device to match version</c>
      <c>suit-wait-event-time</c>
      <c>uint</c>
      <c>Wait until time (seconds since 1970-01-01)</c>
      <c>suit-wait-event-time-of-day</c>
      <c>uint</c>
      <c>Wait until seconds since 00:00:00</c>
      <c>suit-wait-event-time-of-day-utc</c>
      <c>uint</c>
      <c>Wait until seconds since 00:00:00 UTC</c>
      <c>suit-wait-event-day-of-week</c>
      <c>uint</c>
      <c>Wait until days since Sunday</c>
      <c>suit-wait-event-day-of-week-utc</c>
      <c>uint</c>
      <c>Wait until days since Sunday UTC</c>
</texttable>

<t>suit-wait-event-other-device-version reuses the encoding of suit-parameter-version-match. It is encoded as a sequence that contains an implementation-defined bstr identifier for the other device, and a list of one or more SUIT_Parameter_Version_Match.</t>

</section>
</section>
<section anchor="extension-commands" title="Extension Commands">

<t>The following table defines the semantics of the commands defined in this specification in the same way as in the Abstract Machine Description, Section 6.4, of <xref target="I-D.ietf-suit-manifest"/>.</t>

<texttable>
      <ttcol align='left'>Command Name</ttcol>
      <ttcol align='left'>CDDL Identifier</ttcol>
      <ttcol align='left'>Semantic of the Operation</ttcol>
      <c>Use Before</c>
      <c>suit-condition-use-before</c>
      <c>assert(now() &lt; current.params[use-before])</c>
      <c>Check Image Not Match</c>
      <c>suit-condition-image-not-match</c>
      <c>assert(not binary-match(digest(current), current.params[digest]))</c>
      <c>Check Minimum Battery</c>
      <c>suit-condition-minimum-battery</c>
      <c>assert(battery &gt;= current.params[minimum-battery])</c>
      <c>Check Update Authorized</c>
      <c>suit-condition-update-authorized</c>
      <c>assert( isAuthorized( current.params[priority]))</c>
      <c>Check Version</c>
      <c>suit-condition-version</c>
      <c>assert(version_check(current, current.params[version]))</c>
      <c>Wait For Event</c>
      <c>suit-directive-wait</c>
      <c>until event(arg), wait</c>
</texttable>

<section anchor="suit-condition-use-before" title="suit-condition-use-before">

<t>Verify that the current time is BEFORE the specified time. suit-condition-use-before is used to specify the last time at which an update should be installed. The recipient evaluates the current time against the suit-parameter-use-before parameter (<xref target="suit-parameter-use-before"/>), which must have already been set as a parameter, encoded as seconds after 1970-01-01 00:00:00 UTC. Timestamp conditions MUST be evaluated in 64 bits, regardless of encoded CBOR size. suit-condition-use-before is OPTIONAL to implement.</t>

</section>
<section anchor="suit-condition-image-not-match" title="suit-condition-image-not-match">

<t>Verify that the current component does not match the suit-parameter-image-digest (Section 8.4.8.6 of <xref target="I-D.ietf-suit-manifest"/>). If no digest is specified, the condition fails. suit-condition-image-not-match is OPTIONAL to implement.</t>

</section>
<section anchor="suit-condition-minimum-battery" title="suit-condition-minimum-battery">

<t>suit-condition-minimum-battery provides a mechanism to test a Recipient’s battery level before installing an update. This condition is primarily for use in primary-cell applications, where the battery is only ever discharged. For batteries that are charged, suit-directive-wait is more appropriate, since it defines a “wait” until the battery level is sufficient to install the update. suit-condition-minimum-battery is specified in mWh. suit-condition-minimum-battery is OPTIONAL to implement. suit-condition-minimum-battery consumes suit-parameter-minimum-battery (<xref target="suit-parameter-minimum-battery"/>).</t>

</section>
<section anchor="suit-condition-update-authorized" title="suit-condition-update-authorized">

<t>Request Authorization from the application and fail if not authorized. This can allow a user to decline an update. suit-parameter-update-priority (<xref target="suit-parameter-update-priority"/>) provides an integer priority level that the application can use to determine whether or not to authorize the update. Priorities are application defined. suit-condition-update-authorized is OPTIONAL to implement.</t>

</section>
<section anchor="suit-condition-version" title="suit-condition-version">

<t>suit-condition-version allows comparing versions of firmware. Verifying image digests is preferred to version checks because digests are more precise. suit-condition-version examines a component’s version against the version info specified in suit-parameter-version (<xref target="suit-parameter-version"/>)</t>

</section>
<section anchor="suit-directive-wait" title="suit-directive-wait">

<t>suit-directive-wait directs the manifest processor to pause until a specified event occurs. Some possible events include:</t>

<t><list style="numbers">
  <t>Authorization</t>
  <t>External Power</t>
  <t>Network availability</t>
  <t>Other Device Firmware Version</t>
  <t>Time</t>
  <t>Time of Day</t>
  <t>Day of Week</t>
</list></t>

</section>
</section>
<section anchor="iana" title="IANA Considerations">

<t>IANA is requested to:</t>

<t><list style="symbols">
  <t>allocate key 14 in the SUIT Envelope registry for suit-coswid</t>
  <t>allocate key 14 in the SUIT Manifest registry for suit-coswid</t>
  <t>allocate key 7 in the SUIT Component Text registry for suit-text-version-required</t>
  <t>allocate the commands and parameters as shown in the following tables</t>
</list></t>

<section anchor="suit-commands" title="SUIT Commands">

<texttable>
      <ttcol align='left'>Label</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>4</c>
      <c>Use Before</c>
      <c><xref target="suit-condition-use-before"/></c>
      <c>25</c>
      <c>Image Not Match</c>
      <c><xref target="suit-condition-image-not-match"/></c>
      <c>26</c>
      <c>Minimum Battery</c>
      <c><xref target="suit-condition-minimum-battery"/></c>
      <c>27</c>
      <c>Update Authorized</c>
      <c><xref target="suit-condition-update-authorized"/></c>
      <c>28</c>
      <c>Version</c>
      <c><xref target="suit-condition-version"/></c>
      <c>29</c>
      <c>Wait For Event</c>
      <c><xref target="suit-directive-wait"/></c>
</texttable>

</section>
<section anchor="suit-parameters" title="SUIT Parameters">

<texttable>
      <ttcol align='left'>Label</ttcol>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>4</c>
      <c>Use Before</c>
      <c><xref target="suit-parameter-use-before"/></c>
      <c>26</c>
      <c>Minimum Battery</c>
      <c><xref target="suit-parameter-minimum-battery"/></c>
      <c>27</c>
      <c>Update Priority</c>
      <c><xref target="suit-parameter-update-priority"/></c>
      <c>28</c>
      <c>Version</c>
      <c><xref target="suit-parameter-version"/></c>
      <c>29</c>
      <c>Wait Info</c>
      <c><xref target="suit-parameter-wait-info"/></c>
</texttable>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>This document extends the SUIT manifest specification. A detailed security treatment can be found in the architecture <xref target="RFC9019"/> and in the information model <xref target="I-D.ietf-suit-information-model"/> documents.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>




<reference anchor='I-D.ietf-sacm-coswid'>
   <front>
      <title>Concise Software Identification Tags</title>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Jessica Fitzgerald-McKay'>
	 <organization>National Security Agency</organization>
      </author>
      <author fullname='Charles Schmidt'>
	 <organization>The MITRE Corporation</organization>
      </author>
      <author fullname='David Waltermire'>
	 <organization>National Institute of Standards and Technology</organization>
      </author>
      <date day='20' month='October' year='2021'/>
      <abstract>
	 <t>   ISO/IEC 19770-2:2015 Software Identification (SWID) tags provide an
   extensible XML-based structure to identify and describe individual
   software components, patches, and installation bundles.  SWID tag
   representations can be too large for devices with network and storage
   constraints.  This document defines a concise representation of SWID
   tags: Concise SWID (CoSWID) tags.  CoSWID supports a similar set of
   semantics and features as SWID tags, as well as new semantics that
   allow CoSWIDs to describe additional types of information, all in a
   more memory efficient format.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-sacm-coswid-19'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-sacm-coswid-19.txt' type='TXT'/>
</reference>


<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg'>
	 <organization>Inria</organization>
      </author>
      <date day='12' month='July' year='2021'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an IoT device), where to find the that code/data,
   the devices to which it applies, and cryptographic information
   protecting the manifest.  Software updates and Trusted Invocation
   both tend to use sequences of common operations, so the manifest
   encodes those sequences of operations, rather than declaring the
   metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-14'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-suit-manifest-14.txt' type='TXT'/>
</reference>



<reference anchor='RFC9019' target='https://www.rfc-editor.org/info/rfc9019'>
<front>
<title>A Firmware Update Architecture for Internet of Things</title>
<author fullname='B. Moran' initials='B.' surname='Moran'><organization/></author>
<author fullname='H. Tschofenig' initials='H.' surname='Tschofenig'><organization/></author>
<author fullname='D. Brown' initials='D.' surname='Brown'><organization/></author>
<author fullname='M. Meriac' initials='M.' surname='Meriac'><organization/></author>
<date month='April' year='2021'/>
<abstract><t>Vulnerabilities in Internet of Things (IoT) devices have raised the need for a reliable and secure firmware update mechanism suitable for devices with resource constraints. Incorporating such an update mechanism is a fundamental requirement for fixing vulnerabilities, but it also enables other important capabilities such as updating configuration settings and adding new functionality.</t><t>In addition to the definition of terminology and an architecture, this document provides the motivation for the standardization of a manifest format as a transport-agnostic means for describing and protecting firmware updates.</t></abstract>
</front>
<seriesInfo name='RFC' value='9019'/>
<seriesInfo name='DOI' value='10.17487/RFC9019'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-information-model'>
   <front>
      <title>A Manifest Information Model for Firmware Updates in IoT Devices</title>
      <author fullname='Brendan Moran'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig'>
	 <organization>Arm Limited</organization>
      </author>
      <author fullname='Henk Birkholz'>
	 <organization>Fraunhofer SIT</organization>
      </author>
      <date day='8' month='July' year='2021'/>
      <abstract>
	 <t>   Vulnerabilities with Internet of Things (IoT) devices have raised the
   need for a reliable and secure firmware update mechanism that is also
   suitable for constrained devices.  Ensuring that devices function and
   remain secure over their service life requires such an update
   mechanism to fix vulnerabilities, to update configuration settings,
   as well as adding new functionality.

   One component of such a firmware update is a concise and machine-
   processable meta-data document, or manifest, that describes the
   firmware image(s) and offers appropriate protection.  This document
   describes the information that must be present in the manifest.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-information-model-13'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-suit-information-model-13.txt' type='TXT'/>
</reference>




    </references>


<section anchor="full-cddl" title="A. Full CDDL">

<t>To be valid, the following CDDL MUST be appended to the SUIT Manifest CDDL. The SUIT CDDL is defined in Appendix A of <xref target="I-D.ietf-suit-manifest"/></t>

<figure><artwork type="CDDL"><![CDATA[
SUIT_Envelope_Tagged = #6.107(SUIT_Envelope)
SUIT_Envelope = {
  ? suit-delegation => bstr .cbor SUIT_Delegation,
  suit-authentication-wrapper => bstr .cbor SUIT_Authentication,
  suit-manifest  => bstr .cbor SUIT_Manifest,
  SUIT_Severable_Manifest_Members,
  * SUIT_Integrated_Payload,
  * SUIT_Integrated_Dependency,
  * $$SUIT_Envelope_Extensions,
  * (int => bstr)
}

SUIT_Delegation = [ + [ + bstr .cbor CWT ] ]

CWT = SUIT_Authentication_Block

SUIT_Authentication = [
    bstr .cbor SUIT_Digest,
    * bstr .cbor SUIT_Authentication_Block
]

SUIT_Digest = [
  suit-digest-algorithm-id : suit-cose-hash-algs,
  suit-digest-bytes : bstr,
  * $$SUIT_Digest-extensions
]

SUIT_Authentication_Block /= COSE_Mac_Tagged
SUIT_Authentication_Block /= COSE_Sign_Tagged
SUIT_Authentication_Block /= COSE_Mac0_Tagged
SUIT_Authentication_Block /= COSE_Sign1_Tagged

SUIT_Severable_Manifest_Members = (
  ? suit-dependency-resolution => bstr .cbor SUIT_Command_Sequence,
  ? suit-payload-fetch => bstr .cbor SUIT_Command_Sequence,
  ? suit-install => bstr .cbor SUIT_Command_Sequence,
  ? suit-text => bstr .cbor SUIT_Text_Map,
  ? suit-coswid => bstr .cbor concise-software-identity,
  * $$SUIT_severable-members-extensions,
)

SUIT_Integrated_Payload = (suit-integrated-payload-key => bstr)
SUIT_Integrated_Dependency = (
    suit-integrated-dependency-key => bstr .cbor SUIT_Envelope
)
suit-integrated-payload-key = nint / uint .ge 24
suit-integrated-dependency-key = suit-integrated-payload-key

SUIT_Manifest_Tagged = #6.1070(SUIT_Manifest)

SUIT_Manifest = {
    suit-manifest-version         => 1,
    suit-manifest-sequence-number => uint,
    suit-common                   => bstr .cbor SUIT_Common,
    ? suit-reference-uri          => tstr,
    SUIT_Severable_Members_Choice,
    SUIT_Unseverable_Members,
    * $$SUIT_Manifest_Extensions,
}

SUIT_Unseverable_Members = (
  ? suit-validate => bstr .cbor SUIT_Command_Sequence,
  ? suit-load => bstr .cbor SUIT_Command_Sequence,
  ? suit-run => bstr .cbor SUIT_Command_Sequence,
  * $$unseverable-manifest-member-extensions,
)

SUIT_Severable_Members_Choice = (
  ? suit-dependency-resolution => \
    bstr .cbor SUIT_Command_Sequence / SUIT_Digest,
  ? suit-payload-fetch => \
    bstr .cbor SUIT_Command_Sequence / SUIT_Digest,
  ? suit-install => bstr .cbor SUIT_Command_Sequence / SUIT_Digest,
  ? suit-text => bstr .cbor SUIT_Command_Sequence / SUIT_Digest,
  ? suit-coswid => bstr .cbor SUIT_Command_Sequence / SUIT_Digest,
  * $$severable-manifest-members-choice-extensions
)

SUIT_Common = {
    ? suit-dependencies           => SUIT_Dependencies,
    ? suit-components             => SUIT_Components,
    ? suit-common-sequence        => bstr .cbor SUIT_Common_Sequence,
    * $$SUIT_Common-extensions,
}

SUIT_Dependencies         = [ + SUIT_Dependency ]
SUIT_Components           = [ + SUIT_Component_Identifier ]

concise-software-identity = any

SUIT_Dependency = {
    suit-dependency-digest => SUIT_Digest,
    ? suit-dependency-prefix => SUIT_Component_Identifier,
    * $$SUIT_Dependency-extensions,
}

;REQUIRED to implement:
suit-cose-hash-algs /= cose-alg-sha-256

;OPTIONAL to implement:
suit-cose-hash-algs /= cose-alg-shake128
suit-cose-hash-algs /= cose-alg-sha-384
suit-cose-hash-algs /= cose-alg-sha-512
suit-cose-hash-algs /= cose-alg-shake256

SUIT_Component_Identifier =  [* bstr]

SUIT_Common_Sequence = [
    + ( SUIT_Condition // SUIT_Common_Commands )
]

SUIT_Common_Commands //= (suit-directive-set-component-index,  IndexArg)
SUIT_Common_Commands //= (suit-directive-set-dependency-index, IndexArg)
SUIT_Common_Commands //= (suit-directive-run-sequence,
    bstr .cbor SUIT_Command_Sequence)
SUIT_Common_Commands //= (suit-directive-try-each,
    SUIT_Directive_Try_Each_Argument)
SUIT_Common_Commands //= (suit-directive-set-parameters,
    {+ SUIT_Parameters})
SUIT_Common_Commands //= (suit-directive-override-parameters,
    {+ SUIT_Parameters})

IndexArg /= uint
IndexArg /= bool
IndexArg /= [+uint]

SUIT_Command_Sequence = [ + (
    SUIT_Condition // SUIT_Directive // SUIT_Command_Custom
) ]

SUIT_Command_Custom = (suit-command-custom, bstr/tstr/int/nil)
SUIT_Condition //= (suit-condition-vendor-identifier, SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-class-identifier,  SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-device-identifier, SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-image-match,       SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-image-not-match,   SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-use-before,        SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-minimum-battery,   SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-update-authorized, SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-version,           SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-component-slot,    SUIT_Rep_Policy)
SUIT_Condition //= (suit-condition-abort,             SUIT_Rep_Policy)

SUIT_Directive //= (suit-directive-set-component-index,  IndexArg)
SUIT_Directive //= (suit-directive-set-dependency-index, IndexArg)
SUIT_Directive //= (suit-directive-run-sequence,
    bstr .cbor SUIT_Command_Sequence)
SUIT_Directive //= (suit-directive-try-each,
    SUIT_Directive_Try_Each_Argument)
SUIT_Directive //= (suit-directive-process-dependency, SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-set-parameters,
    {+ SUIT_Parameters})
SUIT_Directive //= (suit-directive-override-parameters,
    {+ SUIT_Parameters})
SUIT_Directive //= (suit-directive-fetch,             SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-copy,              SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-swap,              SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-run,               SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-wait,              SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-fetch-uri-list,    SUIT_Rep_Policy)
SUIT_Directive //= (suit-directive-unlink,            SUIT_Rep_Policy)

SUIT_Directive_Try_Each_Argument = [
    2* bstr .cbor SUIT_Command_Sequence,
    ?nil
]

SUIT_Rep_Policy = uint .bits suit-reporting-bits

suit-reporting-bits = &(
    suit-send-record-success : 0,
    suit-send-record-failure : 1,
    suit-send-sysinfo-success : 2,
    suit-send-sysinfo-failure : 3
)

SUIT_Wait_Event = { + SUIT_Wait_Events }

SUIT_Wait_Events //= (suit-wait-event-authorization => int)
SUIT_Wait_Events //= (suit-wait-event-power => int)
SUIT_Wait_Events //= (suit-wait-event-network => int)
SUIT_Wait_Events //= (suit-wait-event-other-device-version
    => SUIT_Wait_Event_Argument_Other_Device_Version)
SUIT_Wait_Events //= (suit-wait-event-time => uint); Timestamp
SUIT_Wait_Events //= (suit-wait-event-time-of-day
    => uint); Time of Day (seconds since 00:00:00)
SUIT_Wait_Events //= (suit-wait-event-day-of-week
    => uint); Days since Sunday

SUIT_Wait_Event_Argument_Other_Device_Version = [
    other-device: bstr,
    other-device-version: [ + SUIT_Parameter_Version_Match ]
]

SUIT_Parameters //= (suit-parameter-vendor-identifier =>
    (RFC4122_UUID / cbor-pen))
cbor-pen = #6.112(bstr)

SUIT_Parameters //= (suit-parameter-class-identifier => RFC4122_UUID)
SUIT_Parameters //= (suit-parameter-image-digest
    => bstr .cbor SUIT_Digest)
SUIT_Parameters //= (suit-parameter-image-size => uint)
SUIT_Parameters //= (suit-parameter-use-before => uint)
SUIT_Parameters //= (suit-parameter-component-slot => uint)

SUIT_Parameters //= (suit-parameter-encryption-info
    => bstr .cbor SUIT_Encryption_Info)
SUIT_Parameters //= (suit-parameter-compression-info
    => bstr .cbor SUIT_Compression_Info)
SUIT_Parameters //= (suit-parameter-unpack-info
    => bstr .cbor SUIT_Unpack_Info)

SUIT_Parameters //= (suit-parameter-uri => tstr)
SUIT_Parameters //= (suit-parameter-source-component => uint)
SUIT_Parameters //= (suit-parameter-run-args => bstr)

SUIT_Parameters //= (suit-parameter-device-identifier => RFC4122_UUID)
SUIT_Parameters //= (suit-parameter-minimum-battery => uint)
SUIT_Parameters //= (suit-parameter-update-priority => uint)
SUIT_Parameters //= (suit-parameter-version =>
    SUIT_Parameter_Version_Match)
SUIT_Parameters //= (suit-parameter-wait-info =>
    bstr .cbor SUIT_Wait_Event)

SUIT_Parameters //= (suit-parameter-custom => int/bool/tstr/bstr)

SUIT_Parameters //= (suit-parameter-strict-order => bool)
SUIT_Parameters //= (suit-parameter-soft-failure => bool)

SUIT_Parameters //= (suit-parameter-uri-list =>
    bstr .cbor SUIT_URI_List)

RFC4122_UUID = bstr .size 16

SUIT_Parameter_Version_Match = [
    suit-condition-version-comparison-type:
        SUIT_Condition_Version_Comparison_Types,
    suit-condition-version-comparison-value:
        SUIT_Condition_Version_Comparison_Value
]
SUIT_Condition_Version_Comparison_Types /=
    suit-condition-version-comparison-greater
SUIT_Condition_Version_Comparison_Types /=
    suit-condition-version-comparison-greater-equal
SUIT_Condition_Version_Comparison_Types /=
    suit-condition-version-comparison-equal
SUIT_Condition_Version_Comparison_Types /=
    suit-condition-version-comparison-lesser-equal
SUIT_Condition_Version_Comparison_Types /=
    suit-condition-version-comparison-lesser

suit-condition-version-comparison-greater = 1
suit-condition-version-comparison-greater-equal = 2
suit-condition-version-comparison-equal = 3
suit-condition-version-comparison-lesser-equal = 4
suit-condition-version-comparison-lesser = 5

SUIT_Condition_Version_Comparison_Value = [+int]

SUIT_Encryption_Info = COSE_Encrypt_Tagged/COSE_Encrypt0_Tagged
SUIT_Compression_Info = {
    suit-compression-algorithm => SUIT_Compression_Algorithms,
    * $$SUIT_Compression_Info-extensions,
}

SUIT_Compression_Algorithms /= SUIT_Compression_Algorithm_zlib
SUIT_Compression_Algorithms /= SUIT_Compression_Algorithm_brotli
SUIT_Compression_Algorithms /= SUIT_Compression_Algorithm_zstd

SUIT_Compression_Algorithm_zlib = 1
SUIT_Compression_Algorithm_brotli = 2
SUIT_Compression_Algorithm_zstd = 3

SUIT_Unpack_Info = {
    suit-unpack-algorithm => SUIT_Unpack_Algorithms,
    * $$SUIT_Unpack_Info-extensions,

}

SUIT_Unpack_Algorithms /= SUIT_Unpack_Algorithm_Hex
SUIT_Unpack_Algorithms /= SUIT_Unpack_Algorithm_Elf
SUIT_Unpack_Algorithms /= SUIT_Unpack_Algorithm_Coff
SUIT_Unpack_Algorithms /= SUIT_Unpack_Algorithm_Srec

SUIT_Unpack_Algorithm_Hex = 1
SUIT_Unpack_Algorithm_Elf = 2
SUIT_Unpack_Algorithm_Coff = 3
SUIT_Unpack_Algorithm_Srec = 4

SUIT_URI_List = [+ tstr ]

SUIT_Text_Map = {
    SUIT_Text_Keys,
    * SUIT_Component_Identifier => {
        SUIT_Text_Component_Keys
    }
}

SUIT_Text_Component_Keys = (
    ? suit-text-vendor-name           => tstr,
    ? suit-text-model-name            => tstr,
    ? suit-text-vendor-domain         => tstr,
    ? suit-text-model-info            => tstr,
    ? suit-text-component-description => tstr,
    ? suit-text-component-version     => tstr,
    ? suit-text-version-required      => tstr,
    * $$suit-text-component-key-extensions
)

SUIT_Text_Keys = (
    ? suit-text-manifest-description => tstr,
    ? suit-text-update-description   => tstr,
    ? suit-text-manifest-json-source => tstr,
    ? suit-text-manifest-yaml-source => tstr,
    * $$suit-text-key-extensions
)

suit-delegation = 1
suit-authentication-wrapper = 2
suit-manifest = 3

;REQUIRED to implement:
cose-alg-sha-256 = -16

;OPTIONAL to implement:
cose-alg-shake128 = -18
cose-alg-sha-384 = -43
cose-alg-sha-512 = -44
cose-alg-shake256 = -45

suit-manifest-version = 1
suit-manifest-sequence-number = 2
suit-common = 3
suit-reference-uri = 4
suit-dependency-resolution = 7
suit-payload-fetch = 8
suit-install = 9
suit-validate = 10
suit-load = 11
suit-run = 12
suit-text = 13
suit-coswid = 14

suit-dependencies = 1
suit-components = 2
suit-common-sequence = 4

suit-dependency-digest = 1
suit-dependency-prefix = 2

suit-command-custom = nint

suit-condition-vendor-identifier = 1
suit-condition-class-identifier  = 2
suit-condition-image-match       = 3
suit-condition-use-before        = 4
suit-condition-component-slot    = 5

suit-condition-abort                    = 14
suit-condition-device-identifier        = 24
suit-condition-image-not-match          = 25
suit-condition-minimum-battery          = 26
suit-condition-update-authorized        = 27
suit-condition-version                  = 28

suit-directive-set-component-index      = 12
suit-directive-set-dependency-index     = 13
suit-directive-try-each                 = 15
suit-directive-process-dependency       = 18
suit-directive-set-parameters           = 19
suit-directive-override-parameters      = 20
suit-directive-fetch                    = 21
suit-directive-copy                     = 22
suit-directive-run                      = 23

suit-directive-wait                     = 29
suit-directive-fetch-uri-list           = 30
suit-directive-swap                     = 31
suit-directive-run-sequence             = 32
suit-directive-unlink                   = 33

suit-wait-event-authorization        = 1
suit-wait-event-power                = 2
suit-wait-event-network              = 3
suit-wait-event-other-device-version = 4
suit-wait-event-time                 = 5
suit-wait-event-time-of-day          = 6
suit-wait-event-day-of-week          = 7

suit-parameter-vendor-identifier = 1
suit-parameter-class-identifier  = 2
suit-parameter-image-digest      = 3
suit-parameter-use-before        = 4
suit-parameter-component-slot    = 5

suit-parameter-strict-order      = 12
suit-parameter-soft-failure      = 13
suit-parameter-image-size        = 14

suit-parameter-encryption-info   = 18
suit-parameter-compression-info  = 19
suit-parameter-unpack-info       = 20
suit-parameter-uri               = 21
suit-parameter-source-component  = 22
suit-parameter-run-args          = 23

suit-parameter-device-identifier = 24
suit-parameter-minimum-battery   = 26
suit-parameter-update-priority   = 27
suit-parameter-version           = 28
suit-parameter-wait-info         = 29
suit-parameter-uri-list          = 30

suit-parameter-custom = nint

suit-compression-algorithm = 1

suit-unpack-algorithm  = 1

suit-text-manifest-description  = 1
suit-text-update-description    = 2
suit-text-manifest-json-source  = 3
suit-text-manifest-yaml-source  = 4

suit-text-vendor-name           = 1
suit-text-model-name            = 2
suit-text-vendor-domain         = 3
suit-text-model-info            = 4
suit-text-component-description = 5
suit-text-component-version     = 6
suit-text-version-required      = 7
]]></artwork></figure>

</section>


  </back>

<!-- ##markdown-source:
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
cj1t41YleGDe6H+P8f+LvDu7NHQAAA==

-->

</rfc>

